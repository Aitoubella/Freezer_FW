/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#ifndef TOUCHGFX_APPLICATIONFONTPROVIDER_HPP
#define TOUCHGFX_APPLICATIONFONTPROVIDER_HPP

#include <touchgfx/FontManager.hpp>

namespace touchgfx
{
class FlashDataReader;
}

struct Typography
{
    static const touchgfx::FontId DEFAULT = 0;
    static const touchgfx::FontId LARGE = 1;
    static const touchgfx::FontId SMALL = 2;
    static const touchgfx::FontId LARGE_110 = 3;
    static const touchgfx::FontId CUSTOM_45 = 4;
    static const touchgfx::FontId CUSTOM_23 = 5;
    static const touchgfx::FontId CUSTOME_40 = 6;
    static const touchgfx::FontId CUSTOM_40 = 7;
    static const touchgfx::FontId CUSTOME_45 = 8;
    static const touchgfx::FontId CUSTOM_25 = 9;
};

struct TypographyFontIndex
{
    static const touchgfx::FontId DEFAULT = 0;    // verdana_20_4bpp
    static const touchgfx::FontId LARGE = 1;      // verdanai_35_4bpp
    static const touchgfx::FontId SMALL = 2;      // verdana_10_4bpp
    static const touchgfx::FontId LARGE_110 = 3;  // verdanai_110_4bpp
    static const touchgfx::FontId CUSTOM_45 = 4;  // verdanai_45_4bpp
    static const touchgfx::FontId CUSTOM_23 = 5;  // verdanai_23_4bpp
    static const touchgfx::FontId CUSTOME_40 = 6; // verdanai_40_4bpp
    static const touchgfx::FontId CUSTOM_40 = 6;  // verdanai_40_4bpp
    static const touchgfx::FontId CUSTOME_45 = 4; // verdanai_45_4bpp
    static const touchgfx::FontId CUSTOM_25 = 7;  // verdanai_25_4bpp
    static const uint16_t NUMBER_OF_FONTS = 8;
};

class ApplicationFontProvider : public touchgfx::FontProvider
{
public:
    virtual touchgfx::Font* getFont(touchgfx::FontId typography);

    static void setFlashReader(touchgfx::FlashDataReader* /*flashReader*/)
    {
    }

    static touchgfx::FlashDataReader* getFlashReader()
    {
        return 0;
    }
};

#endif // TOUCHGFX_APPLICATIONFONTPROVIDER_HPP
